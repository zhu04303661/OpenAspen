[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dwsim-python"
version = "1.0.0"
description = "DWSIM5 Python重新实现 - 化工过程仿真平台"
authors = [
    {name = "DWSIM Python Team", email = "dwsim-python@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = ["thermodynamics", "chemical engineering", "process simulation", "dwsim"]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "numpy>=1.24.3",
    "scipy>=1.11.4",
    "pandas>=2.0.3",
    "CoolProp>=6.4.1",
    "thermo>=0.2.20",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.9.1",
    "flake8>=6.1.0",
    "mypy>=1.6.1",
]
database = [
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
]
cache = [
    "redis>=5.0.1",
]

[project.urls]
Homepage = "https://github.com/dwsim-python/dwsim-python"
Documentation = "https://dwsim-python.readthedocs.io/"
Repository = "https://github.com/dwsim-python/dwsim-python.git"
Issues = "https://github.com/dwsim-python/dwsim-python/issues"

[project.scripts]
dwsim-api = "dwsim_api.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["flowsheet_solver*", "dwsim_*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    # 测试类型标记
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "fast: marks tests as fast",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks tests as smoke tests for quick validation",
    "performance: marks tests as performance/benchmark tests",
    
    # 架构层级标记
    "foundation: marks tests as foundation/basic framework tests",
    "basic_ops: marks tests as basic unit operations tests",
    "advanced: marks tests as advanced unit operations tests",
    
    # 系统模块标记
    "reactors: marks tests as reactor system tests",
    "logical: marks tests as logical block tests",
    "solver: marks tests as solver integration tests",
    "cape_open: marks tests as CAPE-OPEN integration tests",
    "validation: marks tests as validation/debugging tests",
    
    # 具体设备标记
    "mixer: marks tests as mixer unit operation tests",
    "splitter: marks tests as splitter unit operation tests",
    "heater: marks tests as heater unit operation tests",
    "cooler: marks tests as cooler unit operation tests",
    "pump: marks tests as pump unit operation tests",
    "compressor: marks tests as compressor unit operation tests",
    "valve: marks tests as valve unit operation tests",
    "heat_exchanger: marks tests as heat exchanger unit operation tests",
    
    # 特殊功能标记
    "parametrize: marks tests as parametrized tests",
    "error_handling: marks tests as error handling tests",
    "memory: marks tests as memory usage tests",
    "concurrent: marks tests as concurrent execution tests",
    
    # 额外功能标记
    "calculation_args: marks tests as calculation arguments tests",
    "solver_exceptions: marks tests as solver exception handling tests",
    "flowsheet_solver: marks tests as flowsheet solver tests",
    "convergence_solver: marks tests as convergence solver tests",
    "remote_solvers: marks tests as remote solver tests",
    "extended_operations: marks tests as extended operations tests",
    "benchmarks: marks tests as benchmark tests",
    
    # 数学模块标记
    "math_core: marks tests as core math module tests",
    "math_numerics: marks tests as numerics module tests",
    "math_solvers: marks tests as math solver tests",
    "math_optimization: marks tests as optimization algorithm tests",
    "math_random: marks tests as random number generation tests",
    "math_integration: marks tests as math integration tests",
    "math_performance: marks tests as math performance benchmark tests",
    "matrix_ops: marks tests as matrix operations tests",
    "interpolation: marks tests as interpolation algorithm tests",
    "complex_number: marks tests as complex number tests",
    "brent_solver: marks tests as Brent solver tests",
    "lbfgs: marks tests as L-BFGS optimization tests",
    "mersenne_twister: marks tests as Mersenne Twister tests",
] 